{"version":3,"file":"chunks/812.709a7f918530cc5e35f2.min.js","mappings":"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","sources":["webpack://collective.gridlisting/./node_modules/@patternslib/patternslib/src/core/registry.js","webpack://collective.gridlisting/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://collective.gridlisting/./node_modules/@patternslib/patternslib/src/core/utils.js","webpack://collective.gridlisting/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://collective.gridlisting/./node_modules/@patternslib/patternslib/src/core/parser.js","webpack://collective.gridlisting/./node_modules/@patternslib/patternslib/src/core/mockup-parser.js","webpack://collective.gridlisting/./node_modules/@patternslib/patternslib/src/core/base.js","webpack://collective.gridlisting/./node_modules/@patternslib/patternslib/src/pat/masonry/masonry.js"],"sourcesContent":["/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        $(document).ready(function () {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selectors.map((it) => it.trim().replace(/,$/, \"\")).join(\",\")\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns``\n            // - wrapped in ``.disable-patterns`` elements\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements\n            return (\n                !el.matches(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                !el?.parentNode?.closest?.(\"template\") && // NOTE: not strictly necessary. Template is a DocumentFragment and not reachable except for IE.\n                !el.matches(\".cant-touch-this\") && // BBB. TODO: Remove with next major version.\n                !el?.parentNode?.closest?.(\".cant-touch-this\") // BBB. TODO: Remove with next major version.\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) {\n            // console.debug exists but is deprecated\n            messages.unshift(\"[DEBUG]\");\n            console.log.apply(console, messages);\n        } else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Create a RegExp object of a wildcard search string.\n *\n * @param {string} wildcard: A search string which can contain wildcards \"*\".\n *                           The wildcard \"*\" can be anywhere in the string and\n *                           can also be used multiple times. If no wildcard is\n *                           present the search string is used for an exact match.\n\n * @returns {RegExp}: A RegExp object which can be used to match strings.\n */\nfunction regexp_from_wildcard(wildcard) {\n    let regexp = wildcard.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n    regexp = regexp.replace(/[*]/g, \".*\");\n    regexp = new RegExp(`^${regexp}$`);\n    return regexp;\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        const matcher = regexp_from_wildcard(classes);\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n/*\n\n * parseLength - Parse a length from a string and return the parsed length in\n * pixels.\n\n * @param {String} length - A length string like `1px` or `25%`. Lengths without a unit are treated as pixels.\n * @param {Number} reference_length - The reference length to use for percentage lengths.\n *\n * @returns {Number} - A integer which represents the parsed length in pixels.\n *\n * @throws {Error} - If the length string is invalid.\n *\n * @example\n * parseLength(\"1px\"); // 1\n * parseLength(\"10%\", 100); // 10\n *\n */\nfunction parseLength(length, reference_length = null) {\n    const m = /^(\\d+(?:\\.\\d+)?)\\s*(\\%?\\w*)/.exec(length);\n    if (!m) {\n        throw new Error(\"Invalid length\");\n    }\n    const amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"px\":\n            return Math.round(amount);\n        case \"%\":\n            if (!reference_length) {\n                return 0;\n            }\n            return (reference_length / 100) * Math.round(amount);\n        case \"vw\":\n            return Math.round((amount * window.innerWidth) / 100);\n        case \"vh\":\n            return Math.round((amount * window.innerHeight) / 100);\n        case \"vmin\":\n            return Math.round(\n                (amount * Math.min(window.innerWidth, window.innerHeight)) / 100\n            );\n        case \"vmax\":\n            return Math.round(\n                (amount * Math.max(window.innerWidth, window.innerHeight)) / 100\n            );\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * From: https://underscorejs.org/#debounce\n *\n * @param {Function} func - The function to debounce.\n * @param {Number} ms - The time in milliseconds to debounce.\n * @param {Object} timer - A module-global timer as an object.\n * @param {Boolean} [postpone=true] - If true, the function will only be called\n * at the end, after it stops being called for N milliseconds. If false, the\n * function will be called no more than each [ms] milliseconds, ensuring that\n * the function isn't postponed for for too long.\n *\n * @returns {Function} - The debounced function.\n */\nconst debounce = (func, ms, timer = { timer: null }, postpone = true) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    timer.last_run = 0;\n    return function () {\n        const args = arguments;\n        if (!postpone && timer.timer && Date.now() - timer.last_run <= ms) {\n            return;\n        }\n        clearTimeout(timer.timer);\n        timer.last_run = Date.now();\n        timer.timer = setTimeout(() => {\n            func.apply(this, args);\n        }, ms);\n    };\n};\n\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    return /*@cc_on!@*/ false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\n/**\n * Build intersection observer threshold list.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#building_the_array_of_threshold_ratios\n *\n * @param {Number} num_steps - The number of steps to use.\n *\n * @returns {Array} - Returns the threshold list.\n */\nconst threshold_list = (num_steps = 0) => {\n    let thresholds = [];\n\n    for (let i = 1.0; i <= num_steps; i++) {\n        thresholds.push(i / num_steps);\n    }\n    thresholds.push(0);\n    return thresholds.sort();\n};\n\n/**\n * is_option_truthy - Check if an Pattern option is set.\n *\n * An option is set if it is not one of:\n * - undefined\n * - null\n * - \"none\"\n * - \"\"\n *\n * @param {String} option - The option to check.\n *\n * @returns {Boolean} - Returns true if the option is set, false otherwise.\n *\n * @example\n *\n * is_option_truthy() // false\n * is_option_truthy(undefined) // false\n * is_option_truthy(null) // false\n * is_option_truthy(\"\") // false\n * is_option_truthy(\"none\") // false\n * is_option_truthy(\"false\") // false\n * is_option_truthy(\"foo\") // true\n * is_option_truthy(true) // true\n * is_option_truthy(0) // true\n *\n */\nconst is_option_truthy = (option) => {\n    return ![undefined, null, \"none\", false, \"false\", \"\"].includes(option);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    regexp_from_wildcard: regexp_from_wildcard,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    parseLength: parseLength,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    threshold_list: threshold_list,\n    is_option_truthy: is_option_truthy,\n    //getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n    elementInViewport: (el) => {\n        // BBB: Remove with next major version.\n        console.warn(\"Deprecated. Use utils.isElementInViewport\");\n        return isElementInViewport(el);\n    },\n};\n\nexport default utils;\n","/* Utilities for DOM traversal or navigation */\nimport logging from \"./logging\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * The element to be wrapped will be moved into the wrapper element and the\n * wrapper element is placed just before the old element was.\n *\n * @param {Node} el - The DOM node to wrap.\n * @param {Node} wrapper - The wrapper element.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {Node} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get the horizontal scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The horizontal scroll position.\n */\nconst get_scroll_x = (scroll_reference) => {\n    // scroll_listener == window: window.scrollX\n    // scroll_listener == html: html.scrollLeft == window.scrollX\n    // scroll_listener == DOM node: node.scrollLeft\n    return typeof scroll_reference.scrollLeft !== \"undefined\"\n        ? scroll_reference.scrollLeft\n        : scroll_reference.scrollX;\n};\n\n/**\n * Get the vertical scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The vertical scroll position.\n */\nconst get_scroll_y = (scroll_reference) => {\n    // scroll_listener == window: window.scrollY\n    // scroll_listener == html: html.scrollTop == window.scrollY\n    // scroll_listener == DOM node: node.scrollTop\n    return typeof scroll_reference.scrollTop !== \"undefined\"\n        ? scroll_reference.scrollTop\n        : scroll_reference.scrollY;\n};\n\n/**\n * Get the elements position relative to another element.\n *\n * @param {Node} el - The DOM element to get the position for.\n * @param {Node} [reference_el=document.body] - The DOM element to get the position relative to.\n *\n * @returns {{top: number, left: number}} - The position of the element relative to the other element.\n */\nconst get_relative_position = (el, reference_el = document.body) => {\n    // Get the reference element to which against we calculate\n    // the relative position of the target.\n    // In case of a scroll container of window, we do not have\n    // getBoundingClientRect method, so get the body instead.\n    if (reference_el === window) {\n        reference_el = document.body;\n    }\n\n    // Calculate absolute [¹] position difference between\n    // scroll_container and scroll_target.\n    // Substract the container's border from the scrolling\n    // value, as this one isn't respected by\n    // getBoundingClientRect [²] and would lead to covered\n    // items [³].\n    // ¹) so that it doesn't make a difference, if the element\n    // is below or above the scrolling container. We just need\n    // to know the absolute difference.\n    // ²) Calculations are based from the viewport.\n    // ³) See:\n    //      https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\n    //      https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const left = Math.abs(\n        el.getBoundingClientRect().left +\n            reference_el.scrollLeft -\n            reference_el.getBoundingClientRect().left -\n            dom.get_css_value(reference_el, \"border-left-width\", true)\n    );\n    const top = Math.abs(\n        el.getBoundingClientRect().top +\n            reference_el.scrollTop -\n            reference_el.getBoundingClientRect().top -\n            dom.get_css_value(reference_el, \"border-top-width\", true)\n    );\n\n    return { top, left };\n};\n\n/**\n * Scroll to a given element.\n * The element will be scrolled to the top of the scroll container.\n *\n * @param {Node} el - The element which should be scrolled to.\n * @param {Node} scroll_container - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n * @param {string} [direction=\"top\"] - The direction to scroll to. Can be either \"top\", \"left\" or \"both\".\n */\nconst scroll_to_element = (el, scroll_container, offset = 0, direction = \"top\") => {\n    // Get the position of the element relative to the scroll container.\n    const position = get_relative_position(el, scroll_container);\n\n    const options = { behavior: \"auto\" };\n    if (direction === \"top\" || direction === \"both\") {\n        options.top = position.top - offset;\n    }\n    if (direction === \"left\" || direction === \"both\") {\n        options.left = position.left - offset;\n    }\n\n    // Scroll to the target position.\n    scroll_container.scrollTo(options);\n};\n\n/**\n * Scroll to the top of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_top = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    scroll_container.scrollTo({ top: 0 - offset, behavior: \"auto\" });\n};\n\n/**\n * Scroll to the bottom of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_bottom = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    //\n    const top = (scroll_container === window ? document.body : scroll_container)\n        .scrollHeight;\n    scroll_container.scrollTo({ top: top - offset, behavior: \"auto\" });\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\n/**\n * Get the visible ratio of an element compared to container.\n * If no container is given, the viewport is used.\n *\n * Note: currently only vertical ratio is supported.\n *\n * @param {Node} el - The element to get the visible ratio from.\n * @param {Node} [container] - The container to compare the element to.\n * @returns {number} - The visible ratio of the element.\n *                    0 means the element is not visible.\n *                    1 means the element is fully visible.\n */\nconst get_visible_ratio = (el, container) => {\n    if (!el) {\n        return 0;\n    }\n\n    const rect = el.getBoundingClientRect();\n    const container_rect =\n        container !== window\n            ? container.getBoundingClientRect()\n            : {\n                  top: 0,\n                  bottom: window.innerHeight,\n              };\n\n    let visible_ratio = 0;\n    if (rect.top < container_rect.bottom && rect.bottom > container_rect.top) {\n        const rect_height = rect.bottom - rect.top;\n        const visible_height =\n            Math.min(rect.bottom, container_rect.bottom) -\n            Math.max(rect.top, container_rect.top);\n        visible_ratio = visible_height / rect_height;\n    }\n\n    return visible_ratio;\n};\n\n/**\n * Get an escaped CSS selector for a given id string.\n *\n * id selectors should - but don't have to - start with a letter.\n * If the id starts with a number or a dash, it should be escaped.\n * This method does that for you.\n *\n * Alse see:\n * - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n * - https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape\n *\n * @param {String} id - The id to escape.\n *\n * @returns {String} - The escaped CSS selector.\n *\n * @example\n * escape_css_id_selector(\"#123\"); // returns \"#\\\\31 23\"\"\n * escape_css_id_selector(\"#-123\"); // returns \"#-\\\\31 23\"\n */\nconst escape_css_id = (id) => {\n    return `#${CSS.escape(id.split(\"#\")[1])}`;\n};\n\n/**\n * Get a universally unique id (uuid) for a DOM element.\n *\n * This method returns a uuid for the given element. On the first call it will\n * generate a uuid and store it on the element.\n *\n * @param {Node} el - The DOM node to get the uuid for.\n * @returns {String} - The uuid.\n */\nconst element_uuid = (el) => {\n    if (!get_data(el, \"uuid\", false)) {\n        let uuid;\n        if (window.crypto.randomUUID) {\n            // Create a real UUID\n            // window.crypto.randomUUID does only exist in browsers with secure\n            // context.\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/Crypto/randomUUID\n            uuid = window.crypto.randomUUID();\n        } else {\n            // Create a sufficiently unique ID\n            const array = new Uint32Array(4);\n            uuid = window.crypto.getRandomValues(array).join(\"\");\n        }\n        set_data(el, \"uuid\", uuid);\n    }\n    return get_data(el, \"uuid\");\n};\n\n/**\n * Find a related form element.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @returns {Node} - The closest form element.\n *\n * @example\n * find_form(document.querySelector(\"input\"));\n */\nconst find_form = (el) => {\n    // Prefer input.form which allows for input outside form elements and fall\n    // back to search for a parent form.\n    const form =\n        el.closest(\".pat-subform\") || // Special Patternslib subform concept has precedence.\n        el.form ||\n        el.querySelector(\"input, select, textarea, button\")?.form ||\n        el.closest(\"form\");\n    return form;\n};\n\nconst dom = {\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_scroll_x: get_scroll_x,\n    get_scroll_y: get_scroll_y,\n    get_relative_position: get_relative_position,\n    scroll_to_element: scroll_to_element,\n    scroll_to_top: scroll_to_top,\n    scroll_to_bottom: scroll_to_bottom,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    get_visible_ratio: get_visible_ratio,\n    escape_css_id: escape_css_id,\n    element_uuid: element_uuid,\n    find_form: find_form,\n};\n\nexport default dom;\n","// Patterns argument parser\nimport $ from \"jquery\";\nimport utils from \"./utils.js\";\nimport logging from \"./logging\";\n\nclass ArgumentParser {\n    constructor(name) {\n        this.order = [];\n        this.parameters = {};\n        this.attribute = \"data-pat-\" + name;\n        this.enum_values = {};\n        this.enum_conflicts = [];\n        this.groups = {};\n        this.possible_groups = {};\n        this.log = logging.getLogger(name + \".parser\");\n\n        this.group_pattern = /([a-z][a-z0-9]*)-([A-Z][a-z0-0\\-]*)/i;\n        this.json_param_pattern = /^\\s*\\[?\\s*{/i;\n        this.named_param_pattern = /^\\s*([a-z][a-z0-9\\-]*)\\s*:(.*)/is;\n        this.token_pattern = /(([\"']).*?(?!\\\\)\\2)|\\s*(\\S+)\\s*/g;\n    }\n\n    _camelCase(str) {\n        return str.replace(/\\-([a-z])/g, (__, p1) => p1.toUpperCase());\n    }\n\n    addAlias(alias, original) {\n        /* Add an alias for a previously added parser argument.\n         *\n         * Useful when you want to support both US and UK english argument\n         * names.\n         */\n        if (this.parameters[original]) {\n            this.parameters[original].alias = alias;\n        } else {\n            throw `Attempted to add an alias \"${alias}\" for a non-existing parser argument \"${original}\".`;\n        }\n    }\n\n    addGroupToSpec(spec) {\n        /* Determine wether an argument being parsed can be grouped and\n         * update its specifications object accordingly.\n         *\n         * Internal method used by addArgument and addJSONArgument\n         */\n        const m = spec.name.match(this.group_pattern);\n        if (m) {\n            const group = m[1];\n            const field = m[2];\n            if (group in this.possible_groups) {\n                const first_spec = this.possible_groups[group];\n                const first_name = first_spec.name.match(this.group_pattern)[2];\n                first_spec.group = group;\n                first_spec.dest = first_name;\n                this.groups[group] = new ArgumentParser();\n                this.groups[group].addArgument(\n                    first_name,\n                    first_spec.value,\n                    first_spec.choices,\n                    first_spec.multiple\n                );\n                delete this.possible_groups[group];\n            }\n            if (group in this.groups) {\n                this.groups[group].addArgument(\n                    field,\n                    spec.value,\n                    spec.choices,\n                    spec.multiple\n                );\n                spec.group = group;\n                spec.dest = field;\n            } else {\n                this.possible_groups[group] = spec;\n                spec.dest = this._camelCase(spec.name);\n            }\n        }\n        return spec;\n    }\n\n    addJSONArgument(name, default_value) {\n        /* Add an argument where the value is provided in JSON format.\n         *\n         * This is a different usecase than specifying all arguments to\n         * the data-pat-... attributes in JSON format, and instead is part\n         * of the normal notation except that a value is in JSON instead of\n         * for example a string.\n         */\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec({\n            name: name,\n            value: default_value,\n            dest: name,\n            group: null,\n            type: \"json\",\n        });\n    }\n\n    addArgument(name, default_value, choices, multiple) {\n        const spec = {\n            name: name,\n            value:\n                multiple && !Array.isArray(default_value)\n                    ? [default_value]\n                    : default_value,\n            multiple: multiple,\n            dest: name,\n            group: null,\n        };\n        if (choices && Array.isArray(choices) && choices.length) {\n            spec.choices = choices;\n            spec.type = this._typeof(choices[0]);\n            for (const choice of choices) {\n                if (this.enum_conflicts.indexOf(choice) !== -1) {\n                    continue;\n                } else if (choice in this.enum_values) {\n                    this.enum_conflicts.push(choice);\n                    delete this.enum_values[choice];\n                } else {\n                    this.enum_values[choice] = name;\n                }\n            }\n        } else if (typeof spec.value === \"string\" && spec.value.slice(0, 1) === \"$\") {\n            spec.type = this.parameters[spec.value.slice(1)].type;\n        } else {\n            // Note that this will get reset by _defaults if default_value is a function.\n            spec.type = this._typeof(multiple ? spec.value[0] : spec.value);\n        }\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec(spec);\n    }\n\n    _typeof(obj) {\n        if (obj === null) {\n            return \"null\";\n        }\n        return typeof obj;\n    }\n\n    _coerce(name, value) {\n        const spec = this.parameters[name];\n        if (typeof value !== spec.type)\n            try {\n                switch (spec.type) {\n                    case \"json\":\n                        value = JSON.parse(value);\n                        break;\n                    case \"boolean\":\n                        if (typeof value === \"string\") {\n                            value = value.toLowerCase();\n                            const num = parseInt(value, 10);\n                            if (!isNaN(num)) value = !!num;\n                            else\n                                value =\n                                    value === \"true\" ||\n                                    value === \"y\" ||\n                                    value === \"yes\" ||\n                                    value === \"y\" ||\n                                    value === \"on\";\n                        } else if (typeof value === \"number\") {\n                            value = !!value;\n                        } else {\n                            throw `Cannot convert value for ${name} to boolean.`;\n                        }\n                        break;\n                    case \"number\":\n                        if (typeof value === \"string\") {\n                            value = parseInt(value, 10);\n                            if (isNaN(value)) {\n                                throw `Cannot convert value for ${name} to number.`;\n                            }\n                        } else if (typeof value === \"boolean\") {\n                            value = value + 0;\n                        } else {\n                            throw `Cannot convert value for ${name} to number.`;\n                        }\n                        break;\n                    case \"string\":\n                        value = value.toString();\n                        break;\n                    case \"null\": // Missing default values\n                    case \"undefined\":\n                        break;\n                    default:\n                        throw `Do not know how to convert value for ${name} of type ${typeof value} to ${\n                            spec.type\n                        }.`;\n                }\n            } catch (e) {\n                this.log.warn(e);\n                return null;\n            }\n\n        if (spec.choices && spec.choices.indexOf(value) === -1) {\n            this.log.warn(`Illegal value for ${name}: ${value}.`);\n            return null;\n        }\n        return value;\n    }\n\n    _set(opts, name, value) {\n        if (!(name in this.parameters)) {\n            this.log.debug(`Ignoring value for unknown argument: ${name}.`);\n            return;\n        }\n        const spec = this.parameters[name];\n        let parts;\n        if (spec.multiple) {\n            if (typeof value === \"string\") {\n                parts = value.split(/,+/);\n            } else {\n                parts = value;\n            }\n            value = [];\n            for (const part of parts) {\n                const v = this._coerce(name, part.trim());\n                if (v !== null) {\n                    value.push(v);\n                }\n            }\n        } else {\n            value = this._coerce(name, value);\n            if (value === null) {\n                return;\n            }\n        }\n        opts[name] = value;\n    }\n\n    _split(text) {\n        const tokens = [];\n        text.replace(this.token_pattern, (match, quoted, __, simple) => {\n            if (quoted) {\n                tokens.push(quoted);\n            } else if (simple) {\n                tokens.push(simple);\n            }\n        });\n        return tokens;\n    }\n\n    _parseExtendedNotation(argstring) {\n        const opts = {};\n        const parts = argstring\n            .replace(/;;/g, \"\\0x1f\")\n            .replace(/&amp;/g, \"&amp\\0x1f\")\n            .split(/;/)\n            .map((el) => el.replace(new RegExp(\"\\0x1f\", \"g\"), \";\"));\n        for (const part of parts) {\n            if (!part) {\n                continue;\n            }\n            const matches = part.match(this.named_param_pattern);\n            if (!matches) {\n                this.log.warn(`Invalid parameter: ${part}: ${argstring}.`);\n                continue;\n            }\n            const name = matches[1];\n            const value = matches[2].trim();\n            const arg = Object.values(this.parameters).filter((it) => it.alias === name);\n\n            const is_alias = arg.length === 1;\n\n            if (is_alias) {\n                this._set(opts, arg[0].name, value);\n            } else if (name in this.parameters) {\n                this._set(opts, name, value);\n            } else if (name in this.groups) {\n                const subopt = this.groups[name]._parseShorthandNotation(value);\n                for (const field in subopt) {\n                    this._set(opts, name + \"-\" + field, subopt[field]);\n                }\n            } else {\n                this.log.warn(`Unknown named parameter: ${matches[1]}.`);\n                continue;\n            }\n        }\n        return opts;\n    }\n\n    _parseShorthandNotation(parameter) {\n        const parts = this._split(parameter);\n        const opts = {};\n        let i = 0;\n\n        while (parts.length) {\n            const part = parts.shift().trim();\n            let sense;\n            let flag;\n            let positional = true;\n            if (part.slice(0, 3) === \"no-\") {\n                sense = false;\n                flag = part.slice(3);\n            } else {\n                sense = true;\n                flag = part;\n            }\n            if (flag in this.parameters && this.parameters[flag].type === \"boolean\") {\n                positional = false;\n                this._set(opts, flag, sense);\n            } else if (flag in this.enum_values) {\n                positional = false;\n                this._set(opts, this.enum_values[flag], flag);\n            } else if (positional) this._set(opts, this.order[i], part);\n            else {\n                parts.unshift(part);\n                break;\n            }\n            i++;\n            if (i >= this.order.length) {\n                break;\n            }\n        }\n        if (parts.length) this.log.warn(`Ignore extra arguments: ${parts.join(\" \")}.`);\n        return opts;\n    }\n\n    _parse(parameter) {\n        if (!parameter) {\n            return {};\n        }\n        if (parameter.match(this.json_param_pattern)) {\n            try {\n                return JSON.parse(parameter);\n            } catch (e) {\n                this.log.warn(`Invalid JSON argument found: ${parameter}.`);\n            }\n        }\n        if (parameter.match(this.named_param_pattern)) {\n            return this._parseExtendedNotation(parameter);\n        }\n        const sep = parameter.indexOf(\";\");\n        if (sep === -1) {\n            return this._parseShorthandNotation(parameter);\n        }\n        const opts = this._parseShorthandNotation(parameter.slice(0, sep));\n        const extended = this._parseExtendedNotation(parameter.slice(sep + 1));\n        for (const name in extended) {\n            opts[name] = extended[name];\n        }\n        return opts;\n    }\n\n    _defaults($el) {\n        const result = {};\n        for (const name in this.parameters) {\n            if (typeof this.parameters[name].value === \"function\") {\n                try {\n                    result[name] = this.parameters[name].value($el, name);\n                    this.parameters[name].type = typeof result[name];\n                } catch (e) {\n                    this.log.error(`Default function for ${name} failed.`);\n                }\n            } else {\n                result[name] = this.parameters[name].value;\n            }\n        }\n        return result;\n    }\n\n    _cleanupOptions(options, group_options = true) {\n        // Resolve references\n        for (const name of Object.keys(options)) {\n            const spec = this.parameters[name];\n            if (spec === undefined) {\n                continue;\n            }\n\n            if (\n                options[name] === spec.value &&\n                typeof spec.value === \"string\" &&\n                spec.value.slice(0, 1) === \"$\"\n            ) {\n                options[name] = options[spec.value.slice(1)];\n            }\n        }\n        if (group_options) {\n            // Move options into groups and do renames\n            for (const name of Object.keys(options)) {\n                const spec = this.parameters[name];\n                let target;\n                if (spec === undefined) {\n                    continue;\n                }\n\n                if (spec.group) {\n                    if (typeof options[spec.group] !== \"object\") {\n                        options[spec.group] = {};\n                    }\n                    target = options[spec.group];\n                } else {\n                    target = options;\n                }\n\n                if (spec.dest !== name) {\n                    target[spec.dest] = options[name];\n                    delete options[name];\n                }\n            }\n        }\n        return options;\n    }\n\n    parse($el, options, multiple, inherit = true, group_options = true) {\n        if (!$el.jquery) {\n            $el = $($el);\n        }\n        if (typeof options === \"boolean\" && multiple === undefined) {\n            // Fix argument order: ``multiple`` passed instead of ``options``.\n            multiple = options;\n            options = {};\n        }\n        const stack = inherit ? [[this._defaults($el)]] : [[{}]];\n        let $possible_config_providers;\n        let final_length = 1;\n        /*\n         * XXX this is a workaround for:\n         * - https://github.com/Patternslib/Patterns/issues/393\n         *\n         * Prevents the parser to pollute the pat-modal configuration\n         * with data-pat-inject elements define in a `.pat-modal` parent element.\n         *\n         *  Probably this function should be completely revisited, see:\n         * - https://github.com/Patternslib/Patterns/issues/627\n         *\n         */\n        if (\n            !inherit ||\n            ($el.hasClass(\"pat-modal\") && this.attribute === \"data-pat-inject\")\n        ) {\n            $possible_config_providers = $el;\n        } else {\n            $possible_config_providers = $el.parents(`[${this.attribute}]`).addBack();\n        }\n\n        for (const provider of $possible_config_providers) {\n            let frame;\n            const data = ($(provider).attr(this.attribute) || \"\").trim();\n            if (!data) {\n                continue;\n            }\n            const _parse = this._parse.bind(this);\n            if (data.match(/&&/)) {\n                frame = data.split(/\\s*&&\\s*/).map(_parse);\n            } else {\n                frame = _parse(data);\n            }\n            if (!Array.isArray(frame)) {\n                frame = [frame];\n            }\n            final_length = Math.max(frame.length, final_length);\n            stack.push(frame);\n        }\n\n        if (typeof options === \"object\") {\n            if (Array.isArray(options)) {\n                stack.push(options);\n                final_length = Math.max(options.length, final_length);\n            } else {\n                stack.push([options]);\n            }\n        }\n        if (!multiple) {\n            final_length = 1;\n        }\n        const results = utils\n            .removeDuplicateObjects(utils.mergeStack(stack, final_length))\n            .map((current_value) => this._cleanupOptions(current_value, group_options));\n        return multiple ? results : results[0];\n    }\n}\n\n// BBB\nArgumentParser.prototype.add_argument = ArgumentParser.prototype.addArgument;\n\nexport default ArgumentParser;\n","import $ from \"jquery\";\n\nvar parser = {\n    getOptions($el, patternName, options) {\n        /* This is the Mockup parser. An alternative parser for Patternslib\n         * patterns.\n         *\n         * NOTE: Use of the Mockup parser is discouraged and is added here for\n         * legacy support for the Plone Mockup project.\n         *\n         * It parses a DOM element for pattern configuration options.\n         */\n        options = options || {};\n        // get options from parent element first, stop if element tag name is 'body'\n        if ($el.length !== 0 && !$.nodeName($el[0], \"body\")) {\n            options = this.getOptions($el.parent(), patternName, options);\n        }\n        // collect all options from element\n        let elOptions = {};\n        if ($el.length !== 0) {\n            elOptions = $el.data(\"pat-\" + patternName);\n            if (elOptions) {\n                // parse options if string\n                if (typeof elOptions === \"string\") {\n                    const tmpOptions = {};\n                    $.each(elOptions.split(\";\"), function (i, item) {\n                        item = item.split(\":\");\n                        item.reverse();\n                        let key = item.pop();\n                        key = key.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        item.reverse();\n                        let value = item.join(\":\");\n                        value = value.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        tmpOptions[key] = value;\n                    });\n                    elOptions = tmpOptions;\n                }\n            }\n        }\n        return $.extend(true, {}, options, elOptions);\n    },\n};\n\nexport default parser;\n","/**\n * A Base pattern for creating scoped patterns. It's similar to Backbone's\n * Model class. The advantage of this approach is that each instance of a\n * pattern has its own local scope (closure).\n *\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * You can assign values, such as $el, to `this` for an instance and they\n * will remain unique to that instance.\n *\n * Older Patternslib patterns on the other hand have a single global scope for\n * all DOM elements.\n */\nimport $ from \"jquery\";\nimport Registry from \"./registry\";\nimport logging from \"./logging\";\nimport mockupParser from \"./mockup-parser\";\n\nconst log = logging.getLogger(\"Patternslib Base\");\n\nconst initBasePattern = function ($el, options, trigger) {\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    const name = this.prototype.name;\n    const plog = logging.getLogger(`pat.${name}`);\n    let pattern = $el.data(`pattern-${name}`);\n    if (pattern === undefined && Registry.patterns[name]) {\n        try {\n            // Immediately set the pattern instance to the temporary value\n            // ``initializing`` before the async Base constructor is setting\n            // the value later.\n            // This prevents re-init the pattern on this element on multiple\n            // initialization calls..\n            $el.data(`pattern-${name}`, \"initializing\");\n            options =\n                this.prototype.parser === \"mockup\"\n                    ? mockupParser.getOptions($el, name, options)\n                    : options;\n            pattern = new Registry.patterns[name]($el, options, trigger);\n        } catch (e) {\n            plog.error(`Failed while initializing ${name} pattern.`, e);\n        }\n    }\n    return pattern;\n};\n\nconst Base = async function ($el, options, trigger) {\n    if (($el?.jquery && $el.length === 0) || !$el) {\n        log.warn(\"No element given to pattern.\");\n        return;\n    }\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    this.$el = $el;\n    this.el = $el[0];\n    this.options = $.extend(true, {}, this.defaults || {}, options || {});\n\n    this.emit(\"pre-init\");\n\n    await this.init($el, options, trigger);\n\n    // Store pattern instance on element\n    this.$el.data(`pattern-${this.name}`, this);\n    this.el[`pattern-${this.name}`] = this;\n\n    this.emit(\"init\");\n};\n\nBase.prototype = {\n    constructor: Base,\n    on(eventName, eventCallback) {\n        this.$el.on(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    one(eventName, eventCallback) {\n        this.$el.one(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    emit(eventName, args) {\n        // args should be a list\n        if (args === undefined) {\n            args = [];\n        }\n        this.$el.trigger(`${eventName}.${this.name}.patterns`, args);\n    },\n};\n\nBase.extend = function (patternProps) {\n    /* Helper function to correctly set up the prototype chain for new patterns.\n     */\n    const parent = this;\n    let child;\n\n    // Check that the required configuration properties are given.\n    if (!patternProps) {\n        throw new Error(\n            \"Pattern configuration properties required when calling Base.extend\"\n        );\n    }\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (Object.hasOwnProperty.call(patternProps, \"constructor\")) {\n        child = patternProps.constructor;\n    } else {\n        child = function () {\n            parent.apply(this, arguments);\n        };\n    }\n\n    // Allow patterns to be extended indefinitely\n    child.extend = Base.extend;\n\n    // Static properties required by the Patternslib registry\n    child.init = initBasePattern;\n    child.jquery_plugin = true;\n    child.trigger = patternProps.trigger;\n    child.parser = patternProps?.parser || null;\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () {\n        this.constructor = child;\n    };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add pattern's configuration properties (instance properties) to the subclass,\n    $.extend(true, child.prototype, patternProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    // Register the pattern in the Patternslib registry.\n    if (!patternProps.name) {\n        log.warn(\"This pattern without a name attribute will not be registered!\");\n    } else if (!patternProps.trigger) {\n        log.warn(\n            `The pattern ${patternProps.name} does not have a trigger attribute, it will not be registered.`\n        );\n    } else if (patternProps.autoregister !== false) {\n        Registry.register(child, patternProps.name);\n    }\n    return child;\n};\n\nexport default Base;\n","/**\n * Patternslib pattern for Masonry\n * Copyright 2015 Syslab.com GmBH\n */\nimport $ from \"jquery\";\nimport logging from \"../../core/logging\";\nimport Parser from \"../../core/parser\";\nimport Base from \"../../core/base\";\nimport utils from \"../../core/utils\";\n\n// Lazy loading modules.\nlet Masonry;\n\nconst log = logging.getLogger(\"pat.masonry\");\n\nexport const parser = new Parser(\"masonry\");\n// parser.addArgument(\"stagger\", \"\");\nparser.addArgument(\"column-width\");\nparser.addArgument(\"container-style\", '{ \"position\": \"relative\" }');\nparser.addArgument(\"gutter\");\nparser.addArgument(\"is-fit-width\", false);\nparser.addArgument(\"is-horizontal-order\", false); // preserve horizontal order.\nparser.addArgument(\"is-origin-left\", true);\nparser.addArgument(\"is-origin-top\", true);\nparser.addArgument(\"is-percent-position\", false); // set item positions in percent values. items will not transition on resize.\nparser.addArgument(\"is-resize\", true); // adjust sizes and position on resize.\nparser.addArgument(\"item-selector\", \".item\");\nparser.addArgument(\"stamp\", \"\");\nparser.addArgument(\"transition-duration\", \"0.4s\");\n\n// is-* are masonry v3 options, here we add v4 style names.\n// we keep the is-* as there is special support with options parsing.\nparser.addAlias(\"fit-width\", \"is-fit-width\");\nparser.addAlias(\"origin-left\", \"is-origin-left\");\nparser.addAlias(\"origin-top\", \"is-origin-top\");\nparser.addAlias(\"horizontal-order\", \"is-horizontal-order\");\nparser.addAlias(\"percent-position\", \"is-percent-position\");\nparser.addAlias(\"resize\", \"is-resize\");\n\nexport default Base.extend({\n    name: \"masonry\",\n    trigger: \".pat-masonry\",\n\n    async init($el, opts) {\n        Masonry = (await import(\"masonry-layout\")).default;\n        const ImagesLoaded = (await import(\"imagesloaded\")).default;\n\n        this.options = parser.parse(this.$el, opts);\n        // Initialize\n        this.initMasonry();\n\n        const imgLoad = await ImagesLoaded(this.$el);\n        imgLoad.on(\n            \"progress\",\n            function () {\n                if (!this.msnry) {\n                    this.initMasonry();\n                }\n                this.quicklayout();\n            }.bind(this)\n        );\n        imgLoad.on(\n            \"always\",\n            function () {\n                if (!this.msnry) {\n                    this.initMasonry();\n                }\n                this.layout();\n            }.bind(this)\n        );\n\n        // Update if something gets injected inside the pat-masonry\n        this.$el\n            .on(\n                \"patterns-injected.pat-masonry\",\n                utils.debounce(this.update.bind(this), 100)\n            )\n            .on(\"pat-update\", utils.debounce(this.quicklayout.bind(this), 200));\n\n        var callback = utils.debounce(this.quicklayout.bind(this), 400);\n        var observer = new MutationObserver(callback);\n        /* Explicitly not including style. We assume style is set dynamically only by scripts and we do all our controlled changes through classes.\n           That way we avoid masonry to react on its own style calculation */\n        var config = {\n            childList: true,\n            subtree: true,\n            characterData: false,\n            attributeOldValue: true,\n            attributes: true,\n            attributeFilter: [\"class\"],\n        };\n        observer.observe(document.body, config);\n    },\n\n    async initMasonry() {\n        var containerStyle;\n        try {\n            containerStyle = JSON.parse(this.options.containerStyle);\n        } catch (e) {\n            containerStyle = { position: \"relative\" };\n            log.warn(\n                \"Invalid value passed in as containerStyle. Needs to \" +\n                    \"be valid JSON so that it can be converted to an object for Masonry.\"\n            );\n        }\n        this.msnry = new Masonry(this.$el[0], {\n            columnWidth: this.getTypeCastedValue(this.options.columnWidth),\n            containerStyle: containerStyle,\n            fitWidth: this.options.is[\"fit-width\"],\n            gutter: this.getTypeCastedValue(this.options.gutter),\n            horizontalOrder: this.options.is[\"horizontal-order\"],\n            initLayout: false,\n            itemSelector: this.options.itemSelector,\n            originLeft: this.options.is[\"origin-left\"],\n            originTop: this.options.is[\"origin-top\"],\n            percentPosition: this.options.is[\"percent-position\"],\n            resize: this.options.is[\"resize\"],\n            stamp: this.options.stamp,\n            transitionDuration: this.options.transitionDuration,\n        });\n    },\n\n    update: function () {\n        this.msnry.remove();\n        this.initMasonry();\n        this.layout();\n    },\n\n    quicklayout: function () {\n        if (!this.msnry) {\n            // Not initialized yet\n            return;\n        }\n        // call masonry layout on the children before calling it on this element\n        this.$el.find(\".pat-masonry\").each(function (idx, child) {\n            $(child).patMasonry(\"quicklayout\");\n        });\n        this.msnry.layout();\n    },\n\n    layout: function () {\n        this.$el.removeClass(\"masonry-ready\");\n        this.msnry.on(\n            \"layoutComplete\",\n            function () {\n                this.$el.addClass(\"masonry-ready\");\n            }.bind(this)\n        );\n        this.msnry.layout();\n        this.quicklayout();\n    },\n\n    getTypeCastedValue: function (original) {\n        var val = Number(original);\n        return isNaN(val) ? original || 0 : val;\n    },\n});\n"],"names":["log","logging","getLogger","disable_re","dont_catch_re","disabled","match","dont_catch","exec","window","location","search","info","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","registry","patterns","init","$","document","ready","debug","Object","keys","sort","join","scan","body","clear","name","transformPattern","content","pattern","transform","prototype","e","error","initPattern","el","trigger","$el","plog","matches","orderPatterns","includes","splice","indexOf","unshift","querySelector","Text","jquery","selectors","this","dom","querySelectorAllAndMe","map","it","trim","replace","filter","parentNode","closest","reverse","classList","add","register","jquery_plugin","plugin_name","p1","toUpperCase","utils","jqueryPlugin","root","writer","Function","bind","oThis","TypeError","aArgs","Array","slice","call","arguments","fToBind","fNOP","fBound","apply","concat","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","parent","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","console","warn","path","split","route","length","entry","shift","push","_getFlag","flag","context","undefined","setEnabled","state","isEnabled","setLevel","getLevel","fatal","logconfig","getWriter","safeClone","clone","forEach","callback","thisArg","T","k","O","len","kValue","singleBoundJQueryPlugin","method","options","each","pat","charAt","pluralBoundJQueryPlugin","$this","isObject","obj","type","regexp_from_wildcard","wildcard","regexp","RegExp","isElementInViewport","partial","offset","rec","getBoundingClientRect","top","bottom","left","right","every","val","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","escapeRegExp","str","extend","source","prop","i","hasOwnProperty","findLabel","input","$label","label","nodeType","tagName","id","form","removeWildcardClass","targets","classes","ensureArray","target","remove","matcher","class_list","getAttribute","ok","test","setAttribute","removeAttribute","hideOrShow","nodes","visible","pattern_name","toNodeArray","transitions","none","hide","show","fade","slide","duration","transition","effect","on_complete","action","t","easing","complete","addURLQueryParameter","fullURL","param","value","parts","toString","url","hash","newURL","removeDuplicateObjects","objs","comparator","v","reduce","list","next_obj","is_duplicate","entries","mergeStack","stack","results","frame","frame_length","x","hasValue","checked","selectedIndex","parseTime","time","m","Error","amount","parseFloat","Math","round","parseLength","reference_length","min","max","findRelatives","$relatives","$form","find","get_bounds","bounds","parseInt","y","width","height","checkInputSupport","invalid_value","support","createElement","checkCSSFeature","attribute","tag","supported","style","animation_frame","Promise","requestAnimationFrame","timeout","ms","resolve","setTimeout","debounce","func","timer","postpone","last_run","args","Date","now","clearTimeout","isIE","documentMode","jqToNode","force_array","NodeList","isPrototypeOf","isArray","localized_isodate","date","day","getDate","padStart","month","getMonth","getFullYear","escape_html","html","appendChild","createTextNode","innerHTML","unescape_html","escaped_html","DOMParser","parseFromString","textContent","is_iso_date_time","optional_time","is_iso_date","date_diff","date_1","date_2","utc_1","UTC","utc_2","floor","threshold_list","num_steps","thresholds","is_option_truthy","option","elementInViewport","logger","DATA_PREFIX","DATA_STYLE_DISPLAY","get_css_value","property","as_pixels","as_float","getComputedStyle","getPropertyValue","get_relative_position","reference_el","abs","scrollLeft","scrollTop","get_data","default_value","set_data","selector","all","querySelectorAll","wrap","wrapper","insertBefore","display","find_parents","ret","find_scoped","get_parents","parents","HTMLElement","acquire_attribute","include_empty","include_all","_el","parentElement","is_visible","offsetWidth","offsetHeight","is_input","nodeName","create_from_string","string","createRange","createContextualFragment","find_scroll_container","direction","fallback","overflow_y","overflow_x","get_scroll_x","scroll_reference","scrollX","get_scroll_y","scrollY","scroll_to_element","scroll_container","position","behavior","scrollTo","scroll_to_top","scroll_to_bottom","scrollHeight","delete_data","template","template_string","template_variables","get_visible_ratio","container","rect","container_rect","visible_ratio","rect_height","escape_css_id","CSS","escape","element_uuid","uuid","crypto","randomUUID","array","Uint32Array","getRandomValues","find_form","ArgumentParser","constructor","order","parameters","enum_values","enum_conflicts","groups","possible_groups","group_pattern","json_param_pattern","named_param_pattern","token_pattern","_camelCase","__","addAlias","alias","original","addGroupToSpec","spec","group","field","first_spec","first_name","dest","addArgument","choices","multiple","addJSONArgument","_typeof","choice","_coerce","JSON","parse","toLowerCase","num","isNaN","_set","opts","part","_split","text","tokens","quoted","simple","_parseExtendedNotation","argstring","arg","values","subopt","_parseShorthandNotation","parameter","sense","positional","_parse","sep","extended","_defaults","result","_cleanupOptions","group_options","inherit","$possible_config_providers","final_length","hasClass","addBack","provider","data","attr","current_value","add_argument","getOptions","patternName","elOptions","tmpOptions","item","key","pop","initBasePattern","Registry","parser","mockupParser","Base","async","defaults","emit","on","eventName","eventCallback","one","patternProps","child","Surrogate","__super__","autoregister","Masonry","Parser","default","ImagesLoaded","initMasonry","imgLoad","msnry","quicklayout","layout","update","MutationObserver","observe","childList","subtree","characterData","attributeOldValue","attributes","attributeFilter","containerStyle","columnWidth","getTypeCastedValue","fitWidth","is","gutter","horizontalOrder","initLayout","itemSelector","originLeft","originTop","percentPosition","resize","stamp","transitionDuration","idx","patMasonry","removeClass","addClass","Number"],"sourceRoot":""}